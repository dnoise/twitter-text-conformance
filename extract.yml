tests:
  urls:
    - description: "Extract a lone URL"
      text: "http://example.com"
      expected: ["http://example.com"]

    - description: "Extract valid URL: http://google.com"
      text: "text http://google.com"
      expected: ["http://google.com"]

    - description: "Extract valid URL: http://foobar.com/#"
      text: "text http://foobar.com/#"
      expected: ["http://foobar.com/#"]

    - description: "Extract valid URL: http://google.com/#foo"
      text: "text http://google.com/#foo"
      expected: ["http://google.com/#foo"]

    - description: "Extract valid URL: http://google.com/#search?q=iphone%20-filter%3Alinks"
      text: "text http://google.com/#search?q=iphone%20-filter%3Alinks"
      expected: ["http://google.com/#search?q=iphone%20-filter%3Alinks"]

    - description: "Extract valid URL: http://twitter.com/#search?q=iphone%20-filter%3Alinks"
      text: "text http://twitter.com/#search?q=iphone%20-filter%3Alinks"
      expected: ["http://twitter.com/#search?q=iphone%20-filter%3Alinks"]

    - description: "Extract valid URL: http://somedomain.com/index.php?path=/abc/def/"
      text: "text http://somedomain.com/index.php?path=/abc/def/"
      expected: ["http://somedomain.com/index.php?path=/abc/def/"]

    - description: "Extract valid URL: http://www.boingboing.net/2007/02/14/katamari_damacy_phon.html"
      text: "text http://www.boingboing.net/2007/02/14/katamari_damacy_phon.html"
      expected: ["http://www.boingboing.net/2007/02/14/katamari_damacy_phon.html"]

    - description: "Extract valid URL: http://somehost.com:3000"
      text: "text http://somehost.com:3000"
      expected: ["http://somehost.com:3000"]

    - description: "Extract valid URL: http://xo.com/~matthew+%ff-x"
      text: "text http://xo.com/~matthew+%ff-x"
      expected: ["http://xo.com/~matthew+%ff-x"]

    - description: "Extract valid URL: http://xo.com/~matthew+%ff-,.;x"
      text: "text http://xo.com/~matthew+%ff-,.;x"
      expected: ["http://xo.com/~matthew+%ff-,.;x"]

    - description: "Extract valid URL: http://xo.com/,.;x"
      text: "text http://xo.com/,.;x"
      expected: ["http://xo.com/,.;x"]

    - description: "Extract valid URL: http://en.wikipedia.org/wiki/Primer_(film)"
      text: "text http://en.wikipedia.org/wiki/Primer_(film)"
      expected: ["http://en.wikipedia.org/wiki/Primer_(film)"]

    - description: "Extract valid URL: http://www.ams.org/bookstore-getitem/item=mbk-59"
      text: "text http://www.ams.org/bookstore-getitem/item=mbk-59"
      expected: ["http://www.ams.org/bookstore-getitem/item=mbk-59"]

    - description: "Extract valid URL: http://✪df.ws/ejp"
      text: "text http://✪df.ws/ejp"
      expected: ["http://✪df.ws/ejp"]

    - description: "Extract valid URL: http://chilp.it/?77e8fd"
      text: "text http://chilp.it/?77e8fd"
      expected: ["http://chilp.it/?77e8fd"]

    - description: "Extract valid URL: http://x.com/oneletterdomain"
      text: "text http://x.com/oneletterdomain"
      expected: ["http://x.com/oneletterdomain"]

    - description: "Extract valid URL: http://msdn.microsoft.com/ja-jp/library/system.net.httpwebrequest(v=VS.100).aspx"
      text: "text http://msdn.microsoft.com/ja-jp/library/system.net.httpwebrequest(v=VS.100).aspx"
      expected: ["http://msdn.microsoft.com/ja-jp/library/system.net.httpwebrequest(v=VS.100).aspx"]

    - description: "DO NOT extract invalid URL: http://domain-begin_dash_2314352345_dfasd.foo-cow_4352.com"
      text: "text http://domain-dash_2314352345_dfasd.foo-cow_4352.com"
      expected: []

    - description: "DO NOT extract invalid URL: http://-begin_dash_2314352345_dfasd.foo-cow_4352.com"
      text: "text http://-dash_2314352345_dfasd.foo-cow_4352.com"
      expected: []

    - description: "DO NOT extract invalid URL: http://no-tld"
      text: "text http://no-tld"
      expected: []

    - description: "DO NOT extract invalid URL: http://tld-too-short.x"
      text: "text http://tld-too-short.x"
      expected: []

    - description: "Extract a very long hyphenated sub-domain URL (single letter hyphens)"
      text: "text http://word-and-a-number-8-ftw.domain.com/"
      expected: ["http://word-and-a-number-8-ftw.domain.com/"]

    - description: "Extract a hyphenated TLD (usually a typo)"
      text: "text http://domain.com-that-you-should-have-put-a-space-after"
      expected: ["http://domain.com"]

    - description: "Extract URL ending with # value"
      text: "text http://foo.com?#foo text"
      expected: ["http://foo.com?#foo"]

    - description: "Extract URLs without protocol on (com|org|edu|gov|net) domains"
      text: "foo.com foo.net foo.org foo.edu foo.gov"
      expected: ["foo.com", "foo.net", "foo.org", "foo.edu", "foo.gov"]

    - description: "Extract URLs without protocol not on (com|org|edu|gov|net) domains"
      text: "foo.bar foo.co.jp www.foo.bar www.foo.co.uk wwwww.foo foo.comm foo.somecom foo.govedu foo.jp"
      expected: ["foo.co.jp", "www.foo.co.uk"]

    - description: "Extract URLs without protocol on ccTLD with slash"
      text: "t.co/abcde bit.ly/abcde"
      expected: ["t.co/abcde", "bit.ly/abcde"]

    - description: "Extract URLs with protocol on ccTLD domains"
      text: "http://foo.jp http://fooooo.jp"
      expected: ["http://foo.jp", "http://fooooo.jp"]

    - description: "Extract URLs with a - or + at the end of the path"
      text: "Go to http://example.com/a+ or http://example.com/a-"
      expected: ["http://example.com/a+", "http://example.com/a-"]

    - description: "Extract URLs with longer paths ending in -"
      text: "Go to http://example.com/view/slug-url-?foo=bar"
      expected: ["http://example.com/view/slug-url-?foo=bar"]

    - description: "Extract URLs beginning with a space"
      text: "@user Try http:// example.com/path"
      expected: ["example.com/path"]

    - description: "Extract long URL without protocol surrounded by CJK characters"
      text: "これは日本語です。example.com/path/index.html中国語example.com/path한국"
      expected: ["example.com/path/index.html", "example.com/path"]

    - description: "Extract short URL without protocol surrounded by CJK characters"
      text: "twitter.comこれは日本語です。example.com中国語t.co/abcde한국twitter.com example2.comテストtwitter.com/abcde"
      expected: ["twitter.com", "example.com", "t.co/abcde", "twitter.com", "example2.com", "twitter.com/abcde"]

    - description: "Extract URLs with and without protocol surrounded by CJK characters"
      text: "http://twitter.com/これは日本語です。example.com中国語http://t.co/abcde한국twitter.comテストexample2.comテストhttp://twitter.com/abcde"
      expected: ["http://twitter.com/", "example.com", "http://t.co/abcde", "twitter.com", "example2.com", "http://twitter.com/abcde"]

    - description: "DO NOT extract short URLs without protocol on ccTLD domains without path"
      text: "twitter.jp日本語t.co中国語foo.jp t.co foo.jp"
      expected: []

    - description: "Extract URLs beginning with a non-breaking space (U+00A0)"
      text: "@user Try http:// example.com/path"
      expected: ["example.com/path"]

    - description: "Extract URLs with underscores and dashes in the subdomain"
      text: "test http://sub_domain-dash.twitter.com"
      expected: ["http://sub_domain-dash.twitter.com"]

    - description: "Extract URL with minimum number of valid characters"
      text: "test http://a.b.cd"
      expected: ["http://a.b.cd"]

    - description: "Extract URLs containing underscores and dashes"
      text: "test http://a_b.c-d.com"
      expected: ["http://a_b.c-d.com"]

    - description: "Extract URLs containing dashes in the subdomain"
      text: "test http://a-b.c.com"
      expected: ["http://a-b.c.com"]

    - description: "Extract URLs with dashes in the domain name"
      text: "test http://twitter-dash.com"
      expected: ["http://twitter-dash.com"]

    - description: "Extract URLs with lots of symbols then a period"
      text: "http://www.bestbuy.com/site/Currie+Technologies+-+Ezip+400+Scooter/9885188.p?id=1218189013070&skuId=9885188"
      expected: ["http://www.bestbuy.com/site/Currie+Technologies+-+Ezip+400+Scooter/9885188.p?id=1218189013070&skuId=9885188"]

    - description: "DO NOT extract URLs containing leading dashes in the subdomain"
      text: "test http://-leadingdash.twitter.com"
      expected: []

    - description: "DO NOT extract URLs containing trailing dashes in the subdomain"
      text: "test http://trailingdash-.twitter.com"
      expected: []

    - description: "DO NOT extract URLs containing leading underscores in the subdomain"
      text: "test http://_leadingunderscore.twitter.com"
      expected: []

    - description: "DO NOT extract URLs containing trailing underscores in the subdomain"
      text: "test http://trailingunderscore_.twitter.com"
      expected: []

    - description: "DO NOT extract URLs containing leading dashes in the domain name"
      text: "test http://-twitter.com"
      expected: []

    - description: "DO NOT extract URLs containing trailing dashes in the domain name"
      text: "test http://twitter-.com"
      expected: []

    - description: "DO NOT extract URLs containing underscores in the domain name"
      text: "test http://twitter_underscore.com"
      expected: []

    - description: "DO NOT extract URLs containing underscores in the tld"
      text: "test http://twitter.c_o_m"
      expected: []

    - description: "Extract valid URL http://www.foo.com/foo/path-with-period./"
      text: "test http://www.foo.com/foo/path-with-period./"
      expected: ["http://www.foo.com/foo/path-with-period./"]

    - description: "Extract valid URL http://www.foo.org.za/foo/bar/688.1"
      text: "test http://www.foo.org.za/foo/bar/688.1"
      expected: ["http://www.foo.org.za/foo/bar/688.1"]

    - description: "Extract valid URL http://www.foo.com/bar-path/some.stm?param1=foo;param2=P1|0||P2|0"
      text: "test http://www.foo.com/bar-path/some.stm?param1=foo;param2=P1|0||P2|0"
      expected: ["http://www.foo.com/bar-path/some.stm?param1=foo;param2=P1|0||P2|0"]

    - description: "Extract valid URL http://foo.com/bar/123/foo_&_bar/"
      text: "test http://foo.com/bar/123/foo_&_bar/"
      expected: ["http://foo.com/bar/123/foo_&_bar/"]

    - description: "Extract valid URL http://www.cp.sc.edu/events/65"
      text: "test http://www.cp.sc.edu/events/65 test"
      expected: ["http://www.cp.sc.edu/events/65"]

    - description: "Extract valid URL http://www.andersondaradio.no.comunidades.net/"
      text: "http://www.andersondaradio.no.comunidades.net/ test test"
      expected: ["http://www.andersondaradio.no.comunidades.net/"]

    - description: "Extract valid URL ELPAÍS.com"
      text: "test ELPAÍS.com"
      expected: ["ELPAÍS.com"]

    - description: "DO NOT include period at the end of URL"
      text: "test http://twitter.com/."
      expected: ["http://twitter.com/"]

    - description: "Extract a URL with '?' in fragment"
      text: "http://tn.com.ar/show/00056158/la-estrella-del-certamen-el-turno-de-pamela-anderson?fb_xd_fragment#?=&cb=fe17523f223b7&relation=parent.parent&transport=fragment&type=resize&height=20&ackdata"
      expected: ["http://tn.com.ar/show/00056158/la-estrella-del-certamen-el-turno-de-pamela-anderson?fb_xd_fragment#?=&cb=fe17523f223b7&relation=parent.parent&transport=fragment&type=resize&height=20&ackdata"]

    - description: "Extract a URL with '?' in fragment in a text"
      text: "text http://tn.com.ar/show/00056158/la-estrella-del-certamen-el-turno-de-pamela-anderson?fb_xd_fragment#?=&cb=fe17523f223b7&relation=parent.parent&transport=fragment&type=resize&height=20&ackdata text"
      expected: ["http://tn.com.ar/show/00056158/la-estrella-del-certamen-el-turno-de-pamela-anderson?fb_xd_fragment#?=&cb=fe17523f223b7&relation=parent.parent&transport=fragment&type=resize&height=20&ackdata"]

   # A common cause of runaway regex engines.
    - description: "Extract a URL with a ton of trailing periods"
      text: "Test a ton of periods http://example.com/path.........................................."
      expected: ["http://example.com/path"]

    - description: "Extract a URL with a ton of trailing commas"
      text: "Test a ton of periods http://example.com/,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"
      expected: ["http://example.com/"]

    - description: "Extract a URL with a ton of trailing '!'"
      text: "Test a ton of periods http://example.com/path/!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!"
      expected: ["http://example.com/path/"]

    - description: "DO NOT extract URLs in hashtag or @mention"
      text: "#test.com @test.com #http://test.com @http://test.com #t.co/abcde @t.co/abcde"
      expected: []

    - description: "Extract a t.co URL with a trailing apostrophe"
      text: "I really like http://t.co/pbY2NfTZ's website"
      expected: ["http://t.co/pbY2NfTZ"]

    - description: "Extract a t.co URL with a trailing hyphen"
      text: "Check this site out http://t.co/FNkPfmii- it's great"
      expected: ["http://t.co/FNkPfmii"]

    - description: "Extract a t.co URL with a trailing colon"
      text: "According to http://t.co/ulYGBYSo: the internet is cool"
      expected: ["http://t.co/ulYGBYSo"]

    - description: "Extract URL before newline"
      text: "http://twitter.com\nhttp://example.com\nhttp://example.com/path\nexample.com/path\nt.co\nt.co/abcde"
      expected: ["http://twitter.com", "http://example.com", "http://example.com/path", "example.com/path", "t.co/abcde"]

    - description: "DO NOT extract URL if preceded by $"
      text: "$http://twitter.com $twitter.com $http://t.co/abcde $t.co/abcde $t.co $TVI.CA $RBS.CA"
      expected: []

    - description: "DO NOT extract .bz2 file name as URL"
      text: "long.test.tar.bz2 test.tar.bz2 tar.bz2"
      expected: []

  urls_with_indices:
    - description: "Extract a URL"
      text: "text http://google.com"
      expected:
        - url: "http://google.com"
          indices: [5, 22]

    - description: "Extract a URL from a Japanese tweet"
      text: "皆さん見てください！ http://google.com"
      expected:
        - url: "http://google.com"
          indices: [11, 28]

    - description: "Extract URLs without protocol on ccTLD with slash"
      text: "t.co/abcde bit.ly/abcde"
      expected:
        - url: "t.co/abcde"
          indices: [0, 10]
        - url: "bit.ly/abcde"
          indices: [11, 23]

    - description: "Extract URLs without protocol surrounded by CJK characters"
      text: "twitter.comこれは日本語です。example.com中国語t.co/abcde한국twitter.com example2.comテストtwitter.com/abcde"
      expected:
        - url: "twitter.com"
          indices: [0, 11]
        - url: "example.com"
          indices: [20, 31]
        - url: "t.co/abcde"
          indices: [34, 44]
        - url: "twitter.com"
          indices: [46, 57]
        - url: "example2.com"
          indices: [58, 70]
        - url: "twitter.com/abcde"
          indices: [73, 90]

    - description: "Extract URLs with and without protocol surrounded by CJK characters"
      text: "http://twitter.com/これは日本語です。example.com中国語http://t.co/abcde한국twitter.comテストexample2.comテストhttp://twitter.com/abcde"
      expected:
        - url: "http://twitter.com/"
          indices: [0, 19]
        - url: "example.com"
          indices: [28, 39]
        - url: "http://t.co/abcde"
          indices: [42, 59]
        - url: "twitter.com"
          indices: [61, 72]
        - url: "example2.com"
          indices: [75, 87]
        - url: "http://twitter.com/abcde"
          indices: [90, 114]

    - description: "Extract t.co URLs skipping trailing characters and adjusting indices correctly"
      text: "http://t.co/pbY2NfTZ's http://t.co/2vYHpAc5; http://t.co/ulYGBYSo: http://t.co/8MkmHU0k+c http://t.co/TKLp64dY.x http://t.co/8t7G3ddS#a http://t.co/FNkPfmii-"
      expected:
        - url: "http://t.co/pbY2NfTZ"
          indices: [0, 20]
        - url: "http://t.co/2vYHpAc5"
          indices: [23, 43]
        - url: "http://t.co/ulYGBYSo"
          indices: [45, 65]
        - url: "http://t.co/8MkmHU0k"
          indices: [67, 87]
        - url: "http://t.co/TKLp64dY"
          indices: [90, 110]
        - url: "http://t.co/8t7G3ddS"
          indices: [113, 133]
        - url: "http://t.co/FNkPfmii"
          indices: [136, 156]

    - description: "Extract correct indices for duplicate instances of the same URL"
      text: "http://t.co http://t.co"
      expected:
        - url: "http://t.co"
          indices: [0, 11]
        - url: "http://t.co"
          indices: [12, 23]
